name: MinIO and Python Script

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-minio-and-python:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: "minioadmin"
      AWS_SECRET_ACCESS_KEY: "minioadmin"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start MinIO in Docker
        run: |
          # Crear una red personalizada de Docker
          docker network create minio-network

          # Levantar el contenedor de MinIO en la red personalizada
          docker run -d --network minio-network -p 9000:9000 --name minio \
            -e "MINIO_ACCESS_KEY=minioadmin" \
            -e "MINIO_SECRET_KEY=minioadmin" \
            -v /tmp/data:/data \
            -v /tmp/config:/root/.minio \
            minio/minio server /data

          # Esperar más tiempo para asegurar que MinIO está listo
          sleep 20

          # Crear un bucket directamente con MinIO sin usar mc alias set
          aws --endpoint-url http://minio:9000 s3 mb s3://test-bucket

      - name: Set up pytest container
        run: |
          # Ejecutar pytest dentro de un contenedor conectado a la misma red de MinIO
          docker run --rm --network minio-network -v $GITHUB_WORKSPACE:/app -w /app python:3.9-slim bash -c "pip install pytest boto3 && pytest --endpoint-url http://minio:9000"

      - name: Post-test cleanup
        run: |
          # Detener y eliminar el contenedor de MinIO
          docker stop minio
          docker rm minio

          # Eliminar la red personalizada de Docker
          docker network rm minio-network
